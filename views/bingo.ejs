<!doctype html>

<html>
  <head>
    <style>
      
      table { 
        border-style: solid;
        font-size: 1em;     
        width: 800px;
        height: 500px;
      }  
      th {color: gray;}
      tr {border-style: solid; }
      td {
          border-style: solid;
          text-align: center;
          width: 160px;
          height: 100px;
        }
        
        .center { 
          background: #CCCCFF;
          border-color: orange;
        }
       .selected { background: #CCCCFF ;}

      /* th { border-style: solid;} */
    </style>

    <script src="jquery-2.0.3.js" ></script>  
    <Script src="carhartl-jquery-cookie-3caf209/jquery.cookie.js"></script>
    <script src="underscore.js" ></script>  
    <script>
     /* data */
     var data = ["hello", "there", "babo", "new", "gago", "this is a lot longer"];
     var content = [
         '"DFTBA!"   (alone or within a sentence)',
	 '"Where did Katie go?"  (or some mention of her disappearance)',
	 'Someone mentions Tacos',
	 '"I thought the Gloves were Off?"  (Or some variation thereof, during an argument.)',
	 '#fuckingMexicans',
	 'Glovesie Couple posts Rainbow Vomit Pics.',
	 'Meet Up Pics',
	 'Taco Thread (300 + comments for the sake of Bingo)',
	 'New Subgroup!',
	 '"Who?"',
	 '#notacult',
	 '"Check this thread out in ANF!" ',
	 'Newb Flounce',
   '"I\'m UNFOLLOWING!"  (Gets tagged immediately.)',
	 'Needle Point',
	 'Dear Diary',
	 'Obvious Troll is Obvious  (aka: Newb doesn\'t understand TGAO)',
	 'Someone\'s in the Blanket Fort',
	 '"Good Vibes"',
	 'Drama Thursday (mention of or Actual Drama on Thursday)',
	 '"For the Compound"',
	 'Got confused between TGAO and Newsfeed',
	 'CAH Invite',
	 'Hangout Invite',
	 '"Attachment Unavailable"',
	 'Popcorn',
	 'Texas is mentioned.',
	 '"Am I blocked?" or "I\'ve been blocked!"',
	 '"Use your block button!"',
	 'OKStupid (or equivalent) ',
	 '"NEXT"',
	 'Call for Medical Glovesies',
	 'Buzzfeed Quiz/Video',
	 '#notall________  or #noTall_______',
	 'Drunk post or mention of Moonshine',
	 'I love this post/thread meme ',
	 'Ironic TW',
	 'Music Video',
         '#jelly',
         'Harry Potter reference',
         'Doctor Who reference',
         'selfies!',
         'stabbing',
         'dicks',
         'Chris French says something depressing',
         'serial liking (3+ in same thread, not Maria)',
         'League of Legends',
         'Found $5',
         'Howen tagged in connection with rabbits',
         'Real life events reminds of member. They are tagged.',
         'Cute animal picture', 
         'Noel makes a wrestling reference',
         'minecraft mention, post, or reference',
         'Raool posts or makes a comment',
         'Izzles is kawaii',
         'Confessions are published or discussed',
         'rant post (not in GOML)',
         'Look what I made!',
         'Ophelia tells a story',
         'Job search/interview square',
         'Adulting',
         'Howen complains about children',
         'lacist',
         'lurker comments  and states they are a lurker',
         'Tammy comments on a post',
         'Ophelia loses her shit because people aren\'t bingoing correctly',
         'Hugo tries to stir drama',
         'Debbie tagged so that she can draw them something',
         'Cute kid picture',
         'Food picture',
         'Hugo has a wall of comments (3+)',
         'Someone pouts about getting left out',
         'Mels fight about being the better Mel',
         'Newb asks about Bingo'
          ];



     /* modules */

     var positions = (function($,_) { 
       var p = {};


       p.clear = function() {
          setCookie([]);
       }


       p.remove = function(position){
          removePosition(position);
       }

       p.add = function(position){
          addPosition(position);
       }

       p.get = function(){
          return getPositions(); 
       }


       function getPositions(){
          var result = [];
          
          var value = $.cookie("selectedCellsTGAO");

          if (value != undefined){
            result  = JSON.parse(value);
          }

          return result;
       }

       function removePosition(position){
            var positions = getPositions();
            var newPositions = _.without(positions, position);

            setCookie(newPositions);
       }
       
       function addPosition(position){
         var positions = getPositions();
         positions.push(position);
         var newPositions = _.uniq(positions);
          setCookie(newPositions);
       }

       function setCookie(list){
         $.cookie("selectedCellsTGAO", JSON.stringify(list.sort()), {expires: 30});
       }

       return p;
   }($,_));

     var card = (function($, _, positions){
        var boardCookie = "board";
        var c = {};

        c.load = function(className, data){
          (boardExists()) ? retrieve(className) : create(className, data);
        }

        c.create = function(className, data){
          create(className, data);
        }

        function boardExists(){
          var result = false;
          var board = $.cookie(boardCookie);

          if (board) {
            result = true;
          }
          return result;
        }

        function retrieve(className) {
          var value =  $.cookie(boardCookie);
          var board = JSON.parse(value);
          var selected = positions.get();
          
          populate(className, board, selected);
        }

        function create(className, data){
          var board = select(data, 12 , "Maria likes a comment");
          $.cookie(boardCookie, JSON.stringify(board), {expires: 365});
          var selected = positions.get();
          
          populate(className, board, selected);
        };

        function populate(className, data, selected){
          var selector = "." + className;
          var t = table(data, selected);
          $(selector).html(t);
        }

        function select(data, centerPosition, centerValue){
          var result = _.shuffle(data).splice(0, 24);  
          result.splice(centerPosition, 0, centerValue); 

          return result;
        }

        function table(data, selected){
          var result = "<table border='1'>";

          result += "<tr><th>D</th><th>F</th><th>T</th><th>B</th><th>A</th></tr>";
          result += grid(data, selected);
          result += "</table>";

          return result;
        }

        function td(data, className, position){
          return "<td class='" + className + 
            "' data-position='" + position +  "' >" + 
            data +  "</td>";
        }

        function classes(main, selected, index){
          var result = main;
          
          if (_.contains(selected, index.toString())){
             result += " selected";
          }

          return result;
        }

        function grid(data, selected){
          var result = "";
          var count = 0;
          
          for (var i = 0; i < data.length; i++){
            if (count % 5 == 0) {
              if (result != ""){
                result += "</tr>";
              }
              result += "<tr>";
              count  = 0;
            }
            
            result += (i == 12) ? 
                      td(data[i], "center") :
                      td(data[i], classes("cell", selected, i), i);
            count++;
          }

          result += "</tr>";

          return result;
        }

        return c;    
     }($,_, positions));  

     /* start */ 
     $(document).ready(function(){
         card.load("board", content);  

         $("#reset").click(function(){
            card.create("board", content); 
         });

         $("#clear").click(function(){
            $(".cell").removeClass("selected"); 
            positions.clear();
         });

         $("table").on("click", ".cell", function(){
           var classes = _.flatten([$(this).attr("class").split(" ")]);
           
           if (_.contains(classes, "selected")) {
              $(this).removeClass("selected");    

              var position = $(this).attr("data-position");
              positions.remove(position); 
           } else {
              $(this).addClass("selected");    
              
              var position = $(this).attr("data-position");
              positions.add(position); 
           }
         });

     });

    </script>
  </head>
  <body>
    <h1>TGAO Loteria</h1>
    <input type="button" id="reset" value="New board" />
    <input type="button" id="clear" value="Clear board" />
    <div class="board"></div>
    <p>Version 0.0.6  pot stirer</p>
    <h5>Version history</h5>
    <ul>
      <li>0.0.6 -- Square updated</li>
      <li>0.0.5 -- Squares updated</li>
      <li>0.0.4 -- TGAO loteria version; no collision with anf bingo card</li>
      <li>0.0.3 -- colors cells when clicked; added clear board button; remembers selection on each refresh; remembers selected cells for 2 weeks</li>
      <li>0.0.2 -- script remembers your board until reset for a year</li>
      <li>0.0.1 -- script creates board</li>
    </ul>
      <p> &copy; 2015 Lame Games Studios. All rights reserved <p>
  </body>
</html>

